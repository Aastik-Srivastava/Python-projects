import pygame
import random
import math
from pygame import mixer

# init means intialising pygame;must in every game
pygame.init()

# the below code makes canvas and the values are for width and height:always put double brackets or it will not work
screen = pygame.display.set_mode((1000, 600))  # x , y

# title and icon
pygame.display.set_caption("The Stone Keeper")
icon = pygame.image.load("dungeon.png")
pygame.display.set_icon(icon)
mixer.music.load("back.wav")
mixer.music.play(-1)
# player
playerimg = pygame.image.load("monster.png")
playerY = 480
playerX = 470
playerX_change = 0
playerY_change = 0

# enemy
enemyimg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
enemy_num = 5
enemy_num_change = enemy_num + 1
for i in range(enemy_num):
    enemyimg.append(pygame.image.load("ememy.png"))
    enemyY.append(random.randint(64, 150))
    enemyX.append(random.randint(0, 1000))
    enemyX_change.append(0.7)
    enemyY_change.append(0.04)

bulletimg = pygame.image.load("bullet.png")
bulletY = playerY
bulletX = playerX
bulletX_change = 0
bulletY_change = 0.5
bullet_state = "ready"

# score on screen
score_val = 0
font = pygame.font.Font("freesansbold.ttf", 30)

fontX = 10
fontY = 10

game_txt_font = pygame.font.Font("freesansbold.ttf", 50)

def score_show(x, y):
    score = font.render("Score : " + str(score_val), True, (0, 0, 0))
    screen.blit(score, (x, y))

def game_txt():
    over_text= game_txt_font.render("GAME OVER", True, (30,30,30))
    screen.blit(over_text, (350, 270))

def player(x, y):
    screen.blit(playerimg, (x, y))  # blit means to draw


def enemy(x, y, i):
    screen.blit(enemyimg[i], (x, y))


def bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletimg, (x - 5, y - 10))


def bullet2(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletimg, (x + 48, y - 10))


def collision(enemyX, enemyY, playerX, playerY):
    dis = math.sqrt((math.pow(enemyX - bulletX, 2)) + (math.pow(enemyY - bulletY, 2)))
    if dis < 50:
        return True
    else:
        return False


# game loop infinite that only ends when closed
run = True
while run:
    screen.fill((192, 192, 192))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_LEFT:
            playerX_change = -1.2
        if event.key == pygame.K_RIGHT:
            playerX_change = 1.2
        if event.key == pygame.K_UP:
            playerY_change = -1.2
        if event.key == pygame.K_DOWN:
            playerY_change = 1.2

        if event.key == pygame.K_SPACE:
            if bullet_state == "ready":
                bullet_sound = mixer.Sound("laser.wav")
                bullet_sound.play()
                bulletX = playerX
                bulletY = playerY
                bullet(bulletX, bulletY)

        if event.key == pygame.K_SPACE:
            bullet2(bulletX, bulletY)
    if event.type == pygame.KEYUP:
        if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
            playerX_change = 0
        if event.key == pygame.K_UP or event.key == pygame.K_DOWN:
            playerY_change = 0

    # if we want anything running we put it in the infinite while loop
    playerX += playerX_change
    playerY += playerY_change

    if playerX <= 0:
        playerX = 0
    elif playerX >= 936:
        playerX = 936
    if playerY <= 0:
        playerY = 0
    elif playerY >= 536:
        playerY = 536
    player(playerX, playerY)

    for i in range(enemy_num):

        if enemyY[i] > 600:
            for j in range(enemy_num):
                enemyY[j]= 700
            game_txt()
            break

        enemyX[i] += enemyX_change[i]
        enemyY[i] += enemyY_change[i]
        if enemyX[i] <= 0:
            enemyX_change[i] = 0.4
        elif enemyX[i] >= 936:
            enemyX_change[i] = -0.4
        enemy(enemyX[i], enemyY[i], i)

        coll = collision(enemyX[i], enemyY[i], bulletX, bulletY)

        if bullet_state == "fire":
            if coll:
                bulletY = playerY
                bullet_state = "ready"
                score_val += 1
                enemyY[i] = random.randint(64, 150)
                enemyX[i] = random.randint(0, 1000)

            enemy(enemyX[i], enemyY[i], i)


    if bulletY <= 0:
        bulletY = playerY
        bulletX = playerX
        bullet_state = "ready"

    if bullet_state == "fire":
        bullet(bulletX, bulletY)
        bulletY -= bulletY_change

    if bullet_state == "fire":
        bullet2(bulletX, bulletY)
        bulletY -= bulletY_change
    score_show(fontX, fontY)

    pygame.display.update()  # without update function our background will not appear;must in every game
